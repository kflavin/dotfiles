# Location of dotfiles repo
export DOTFILES=$HOME/.dotfiles

# Config files end in *.zsh.  Create an array of them.
typeset -U config_files
config_files=($DOTFILES/**/*.zsh)

# Warn me if ZSH history got truncated
if [[ $(cat ~/.zsh_history | wc -l) -lt $(cat ~/.zsh_history_backup | wc -l) ]]; then
    echo "*** ZSH history backup is larger than history ***"
    echo 'ls -l ~/.zsh_history*'
    echo 'cp ~/.zsh_history_backup ~/.zsh_history'
fi

# Stash your environment variables in ~/.localrc. This means they'll stay out
# of your main dotfiles repository (which may be public, like this one), but
# you'll have access to them in your scripts.
if [[ -a ~/.localrc ]]
then
    source ~/.localrc
    source ~/.localrc_*
    ls ~/.localrc_* >/dev/null 2>&1 && echo "Sourcing files:" ~/.localrc_*
fi

# load the path files first
for file in ${(M)config_files:#*/path.zsh}; do
    source $file
done

# load everything but the path and completion files
for file in ${${config_files:#*/path.zsh}:#*/completion.zsh}; do
    source $file
done

## initialize autocomplete here, otherwise functions won't be loaded
autoload -U compinit
compinit

## load every completion after autocomplete loads
for file in ${(M)config_files:#*/completion.zsh}
do
    source $file
done

unset config_files

## Better history
## Credits to https://coderwall.com/p/jpj_6q/zsh-better-history-searching-with-arrow-keys
#autoload -U up-line-or-beginning-search
#autoload -U down-line-or-beginning-search
#zle -N up-line-or-beginning-search
#zle -N down-line-or-beginning-search
#bindkey "^[[A" up-line-or-beginning-search # Up
#bindkey "^[[B" down-line-or-beginning-search # Down

# Which plugins would you like to load?
# Standard plugins can be found in ~/.oh-my-zsh/plugins/*
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
  kubectl
  ssh-agent
)

## No arguments: `git status`
# With arguments: acts like `git`
g() {
  if [[ $# > 0 ]]; then
    git $@
  else
    git status
  fi
}

# Complete g like git
compdef g=git

# Bind forward and back words
bindkey "^[^[[C" forward-word
bindkey "^[^[[D" backward-word

# ZSH history settings
# https://unix.stackexchange.com/a/575102/166026
HISTFILE=$HOME/.zsh_history
export HISTSIZE=999999999
export SAVEHIST=$HISTSIZE
export HISTCONTROL=ignoreboth
setopt appendhistory
setopt INC_APPEND_HISTORY
setopt SHARE_HISTORY

# Terraform
autoload -U +X bashcompinit && bashcompinit
complete -o nospace -C /usr/local/bin/terraform terraform

export EDITOR=vim


# GCloud Configuration
if [ -f '~/Downloads/google-cloud-sdk/path.zsh.inc' ]; then . '~/Downloads/google-cloud-sdk/path.zsh.inc'; fi
# The next line enables shell command completion for gcloud.
if [ -f '~/Downloads/google-cloud-sdk/completion.zsh.inc' ]; then . '~/Downloads/google-cloud-sdk/completion.zsh.inc'; fi

[ -f ~/.docker/init-zsh.sh ] && source ~/.docker/init-zsh.sh || true # Added by Docker Desktop

# asdf
# see ~/.tools-versions for default version of Ruby.  File should look like:
# ruby 3.1.2
# set a ./.tool-versions for a local version of ruby.
# old #. /usr/local/opt/asdf/libexec/asdf.sh
. "$(asdf info | grep ASDF_DIR | cut -d= -f2)/asdf.sh"


if [[ -n $SSH_CLIENT ]]; then
    export PS1="(ssh) $PS1"
fi


if [[ -x $(which direnv) ]]; then
    eval "$(direnv hook zsh)"
fi
